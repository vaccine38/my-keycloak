version: "3.7"
services:
  postgres:
    container_name: postgres_keycloak
    image: "postgres:14.4"
    restart: always
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "postgres", "-U", "postgres" ]
      timeout: 45s
      interval: 10s
      retries: 10
    volumes:
      - postgres_data:/var/lib/postgresql/data
      #- ./sql:/docker-entrypoint-initdb.d/:ro # turn it on, if you need run init DB
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: keycloak
      POSTGRES_HOST: postgres
    networks:
      - local
    ports:
      - "5432:5432"

#  pgadmin:
#    container_name: pgadmin
#    image: "dpage/pgadmin4:5.1"
#    restart: always
#    environment:
#      PGADMIN_DEFAULT_EMAIL: postgres@domain.local
#      PGADMIN_DEFAULT_PASSWORD: postgres
#    ports:
#      - "5555:80"
#    networks:
#      - local

  keycloak:
    container_name: keycloak
    restart: always
    build:
      context: .
      args:
        KEYCLOAK_VERSION: 23.0.6
    image: my-keycloak:1.0.0
    command: start-dev
    depends_on:
      - "postgres"
    environment:
      JAVA_OPTS_APPEND: -Dkeycloak.profile.feature.upload_scripts=enabled
      KC_DB: postgres
      KC_DB_PASSWORD: postgres
      KC_DB_URL: jdbc:postgresql://postgres/keycloak
      KC_DB_USERNAME: postgres
      KC_HEALTH_ENABLED: 'true'
      KC_HTTP_ENABLED: 'true'
      KC_METRICS_ENABLED: 'true'
#      KC_HOSTNAME_URL: http://keycloak.com.au:8090
      KC_PROXY: reencrypt
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_CACHE: ispn
      KC_CACHE_CONFIG_FILE: cache-ispn.xml
    ports:
      - "8090:8080"
      - "8787:8787" # debug port
    networks:
      - local

networks:
  local:
    name: local
    driver: bridge

volumes:
  postgres_data: